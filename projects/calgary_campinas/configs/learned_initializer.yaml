# This model has been trained on 4x GPUs and is our submission to the Calgary Campinas 2020 challenge,
# and achieves at time of writing the first place in track 02.
physics:
    # Modality specific functions, for MRI you need to define the (torch) forward projector here.
    forward_operator: fft2(centered=False)
    backward_operator: ifft2(centered=False)
training:
    datasets:
        -   name: CalgaryCampinas
            transforms:
                crop: [218, 170]
                estimate_sensitivity_maps: true
                masking:
                    name: CalgaryCampinas
                    accelerations: [5, 10]
    batch_size: 2
    optimizer: Adam
    lr: 0.0005
    weight_decay: 0.0
    lr_step_size: 100000
    lr_gamma: 0.5
    lr_warmup_iter: 1000
    num_iterations: 1000000
    gradient_steps: 1
    gradient_clipping: 0.0
    gradient_debug: false
    checkpointer:
        checkpoint_steps: 1000
    validation_steps: 1000
    loss:
        crop: [218, 170]
        losses:
            -   function: l1_loss
                multiplier: 1.0
            -   function: ssim_loss
                multiplier: 1.0
validation:
    datasets:
        # Twice the same dataset but a different acceleration factor
        -   name: CalgaryCampinas
            text_description: 5x  # Description for logging
            transforms:
                crop: null
                estimate_sensitivity_maps: true
                masking:
                    name: CalgaryCampinas
                    accelerations: [5]
        -   name: CalgaryCampinas
            text_description: 10x
            transforms:
                crop: null
                estimate_sensitivity_maps: true
                masking:
                    name: CalgaryCampinas
                    accelerations: [10]
    metrics:
        - batch_psnr
model:
    model_name: rim.rim.RIM
    hidden_channels: 128
    length: 16
    depth: 2
    steps: 1
    no_parameter_sharing: false
    instance_norm: false
    dense_connect: false
    replication_padding: true
    learned_initializer: true
    initializer_channels: [32, 32, 64, 64]
    initializer_dilations: [1, 1, 2, 4]
    initializer_multiscale: 1
tensorboard:
    num_images: 4
